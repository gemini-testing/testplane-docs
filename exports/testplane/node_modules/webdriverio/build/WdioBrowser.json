{
    "WdioBrowser": {
        "comment": {
            "blockTags": [
                {
                    "skipRendering": false,
                    "tag": "@deprecated",
                    "content": [
                        {
                            "kind": "text",
                            "text": "use "
                        },
                        {
                            "kind": "code",
                            "text": "`WebdriverIO.Browser`"
                        },
                        {
                            "kind": "text",
                            "text": " instead"
                        }
                    ]
                }
            ],
            "modifierTags": {},
            "summary": []
        },
        "properties": {
            "sessionId": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Session id for the current running session"
                        }
                    ]
                }
            },
            "capabilities": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Applied capabilities used in the current session. Note: these can differ from the actual\nrequested capabilities if the remote end couldn't provide an exact match."
                        }
                    ]
                }
            },
            "requestedCapabilities": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Requested capabilities defined in the config object."
                        }
                    ]
                }
            },
            "options": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Applied WebdriverIO options (options that aren't officially part of WebdriverIO are stripped\nout of this object)."
                        }
                    ]
                }
            },
            "puppeteer": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Puppeteer instance"
                        }
                    ]
                }
            }
        },
        "methods": {
            "addListener": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.1.26"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Alias for "
                        },
                        {
                            "kind": "code",
                            "text": "`emitter.on(eventName, listener)`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "removeListener": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.1.26"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes the specified "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " from the listener array for the event named"
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ".\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "`removeListener()`"
                        },
                        {
                            "kind": "text",
                            "text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ", then "
                        },
                        {
                            "kind": "code",
                            "text": "`removeListener()`"
                        },
                        {
                            "kind": "text",
                            "text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
                        },
                        {
                            "kind": "code",
                            "text": "`removeListener()`"
                        },
                        {
                            "kind": "text",
                            "text": " or "
                        },
                        {
                            "kind": "code",
                            "text": "`removeAllListeners()`"
                        },
                        {
                            "kind": "text",
                            "text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
                        },
                        {
                            "kind": "code",
                            "text": "`emit()`"
                        },
                        {
                            "kind": "text",
                            "text": " in progress. Subsequent events behave as expected.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
                        },
                        {
                            "kind": "code",
                            "text": "`emitter.listeners()`"
                        },
                        {
                            "kind": "text",
                            "text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
                        },
                        {
                            "kind": "code",
                            "text": "`removeListener()`"
                        },
                        {
                            "kind": "text",
                            "text": " will remove the most\nrecently added instance. In the example the "
                        },
                        {
                            "kind": "code",
                            "text": "`once('ping')`"
                        },
                        {
                            "kind": "text",
                            "text": "listener is removed:\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\nReturns a reference to the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": ", so that calls can be chained."
                        }
                    ]
                }
            },
            "off": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v10.0.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Alias for "
                        },
                        {
                            "kind": "code",
                            "text": "`emitter.removeListener()`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "removeAllListeners": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.1.26"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Removes all listeners, or those of the specified "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": ", so that calls can be chained."
                        }
                    ]
                }
            },
            "setMaxListeners": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.3.5"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "By default "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": "s will print a warning if more than "
                        },
                        {
                            "kind": "code",
                            "text": "`10`"
                        },
                        {
                            "kind": "text",
                            "text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
                        },
                        {
                            "kind": "code",
                            "text": "`emitter.setMaxListeners()`"
                        },
                        {
                            "kind": "text",
                            "text": " method allows the limit to be\nmodified for this specific "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": " instance. The value can be set to"
                        },
                        {
                            "kind": "code",
                            "text": "`Infinity`"
                        },
                        {
                            "kind": "text",
                            "text": " (or "
                        },
                        {
                            "kind": "code",
                            "text": "`0`"
                        },
                        {
                            "kind": "text",
                            "text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": ", so that calls can be chained."
                        }
                    ]
                }
            },
            "getMaxListeners": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v1.0.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the current max listener value for the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": " which is either\nset by "
                        },
                        {
                            "kind": "code",
                            "text": "`emitter.setMaxListeners(n)`"
                        },
                        {
                            "kind": "text",
                            "text": " or defaults to "
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "defaultMaxListeners"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "listeners": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.1.26"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a copy of the array of listeners for the event named "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ".\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
                        }
                    ]
                }
            },
            "rawListeners": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v9.4.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns a copy of the array of listeners for the event named "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ",\nincluding any wrappers (such as those created by "
                        },
                        {
                            "kind": "code",
                            "text": "`.once()`"
                        },
                        {
                            "kind": "text",
                            "text": ").\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
                        }
                    ]
                }
            },
            "emit": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v0.1.26"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Synchronously calls each of the listeners registered for the event named"
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
                        },
                        {
                            "kind": "code",
                            "text": "`true`"
                        },
                        {
                            "kind": "text",
                            "text": " if the event had listeners, "
                        },
                        {
                            "kind": "code",
                            "text": "`false`"
                        },
                        {
                            "kind": "text",
                            "text": " otherwise.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst EventEmitter = require('events');\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
                        }
                    ]
                }
            },
            "listenerCount": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v3.2.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns the number of listeners listening to the event named "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ".\n\nIf "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " is provided, it will return how many times the listener\nis found in the list of the listeners of the event."
                        }
                    ]
                }
            },
            "prependListener": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v6.0.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Adds the "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " function to the _beginning_ of the listeners array for the\nevent named "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": ". No checks are made to see if the "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " has\nalready been added. Multiple calls passing the same combination of "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": "and "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " will result in the "
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " being added, and called, multiple\ntimes.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\nReturns a reference to the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": ", so that calls can be chained."
                        }
                    ]
                }
            },
            "prependOnceListener": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v6.0.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Adds a **one-time**"
                        },
                        {
                            "kind": "code",
                            "text": "`listener`"
                        },
                        {
                            "kind": "text",
                            "text": " function for the event named "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": " to the _beginning_ of the listeners array. The next time "
                        },
                        {
                            "kind": "code",
                            "text": "`eventName`"
                        },
                        {
                            "kind": "text",
                            "text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
                        },
                        {
                            "kind": "text",
                            "text": "\n\nReturns a reference to the "
                        },
                        {
                            "kind": "code",
                            "text": "`EventEmitter`"
                        },
                        {
                            "kind": "text",
                            "text": ", so that calls can be chained."
                        }
                    ]
                }
            },
            "eventNames": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@since",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "v6.0.0"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
                        },
                        {
                            "kind": "code",
                            "text": "`Symbol`"
                        },
                        {
                            "kind": "text",
                            "text": "s.\n\n"
                        },
                        {
                            "kind": "code",
                            "text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
                        }
                    ]
                }
            },
            "addCommand": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "add command to "
                        },
                        {
                            "kind": "code",
                            "text": "`browser`"
                        },
                        {
                            "kind": "text",
                            "text": " or "
                        },
                        {
                            "kind": "code",
                            "text": "`element`"
                        },
                        {
                            "kind": "text",
                            "text": " scope"
                        }
                    ]
                }
            },
            "overwriteCommand": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "overwrite "
                        },
                        {
                            "kind": "code",
                            "text": "`browser`"
                        },
                        {
                            "kind": "text",
                            "text": " or "
                        },
                        {
                            "kind": "code",
                            "text": "`element`"
                        },
                        {
                            "kind": "text",
                            "text": " command"
                        }
                    ]
                }
            },
            "addLocatorStrategy": {
                "comment": {
                    "blockTags": [],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "create custom selector"
                        }
                    ]
                }
            },
            "sessionStatus": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-session-status"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.SessionStatusResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"session.status\" with parameters."
                        }
                    ]
                }
            },
            "sessionNew": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-session-new"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.SessionNewResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"session.new\" with parameters."
                        }
                    ]
                }
            },
            "sessionEnd": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-session-end"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"session.end\" with parameters."
                        }
                    ]
                }
            },
            "sessionSubscribe": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-session-subscribe"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"session.subscribe\" with parameters."
                        }
                    ]
                }
            },
            "sessionUnsubscribe": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-session-unsubscribe"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"session.unsubscribe\" with parameters."
                        }
                    ]
                }
            },
            "browserClose": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browser-close"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browser.close\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextActivate": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-activate"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.activate\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextCaptureScreenshot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-captureScreenshot"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextCaptureScreenshotResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.captureScreenshot\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextClose": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-close"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.close\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextCreate": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-create"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextCreateResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.create\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextGetTree": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-getTree"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextGetTreeResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.getTree\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextHandleUserPrompt": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-handleUserPrompt"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.handleUserPrompt\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextLocateNodes": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-locateNodes"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextLocateNodesResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.locateNodes\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextNavigate": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-navigate"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextNavigateResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.navigate\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextPrint": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-print"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextPrintResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.print\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextReload": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-reload"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.reload\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextSetViewport": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-setViewport"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.setViewport\" with parameters."
                        }
                    ]
                }
            },
            "browsingContextTraverseHistory": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-browsingContext-traverseHistory"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.BrowsingContextTraverseHistoryResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"browsingContext.traverseHistory\" with parameters."
                        }
                    ]
                }
            },
            "networkAddIntercept": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-addIntercept"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.NetworkAddInterceptResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.addIntercept\" with parameters."
                        }
                    ]
                }
            },
            "networkContinueRequest": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-continueRequest"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.continueRequest\" with parameters."
                        }
                    ]
                }
            },
            "networkContinueResponse": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-continueResponse"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.continueResponse\" with parameters."
                        }
                    ]
                }
            },
            "networkContinueWithAuth": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-continueWithAuth"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.continueWithAuth\" with parameters."
                        }
                    ]
                }
            },
            "networkFailRequest": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-failRequest"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.failRequest\" with parameters."
                        }
                    ]
                }
            },
            "networkProvideResponse": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-provideResponse"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.provideResponse\" with parameters."
                        }
                    ]
                }
            },
            "networkRemoveIntercept": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-network-removeIntercept"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"network.removeIntercept\" with parameters."
                        }
                    ]
                }
            },
            "scriptAddPreloadScript": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-addPreloadScript"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.ScriptAddPreloadScriptResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.addPreloadScript\" with parameters."
                        }
                    ]
                }
            },
            "scriptDisown": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-disown"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.disown\" with parameters."
                        }
                    ]
                }
            },
            "scriptCallFunction": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-callFunction"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.callFunction\" with parameters."
                        }
                    ]
                }
            },
            "scriptEvaluate": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-evaluate"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.ScriptEvaluateResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.evaluate\" with parameters."
                        }
                    ]
                }
            },
            "scriptGetRealms": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-getRealms"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.ScriptGetRealmsResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.getRealms\" with parameters."
                        }
                    ]
                }
            },
            "scriptRemovePreloadScript": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-script-removePreloadScript"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"script.removePreloadScript\" with parameters."
                        }
                    ]
                }
            },
            "inputPerformActions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-input-performActions"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"input.performActions\" with parameters."
                        }
                    ]
                }
            },
            "inputReleaseActions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@url",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver-bidi/#command-input-releaseActions"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`Promise<local.EmptyResult>`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "WebDriver Bidi command to send command method \"input.releaseActions\" with parameters."
                        }
                    ]
                }
            },
            "newSession": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-new-sessions"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe New Session command creates a new WebDriver session with the endpoint node. If the creation fails, a session not created error is returned."
                        }
                    ]
                }
            },
            "deleteSession": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-delete-session"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Delete Session command closes any top-level browsing contexts associated with the current session, terminates the connection, and finally closes the current session."
                        }
                    ]
                }
            },
            "status": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-status"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Status command returns information about whether a remote end is in a state in which it can create new sessions and can additionally include arbitrary meta information that is specific to the implementation."
                        }
                    ]
                }
            },
            "getTimeouts": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-timeouts"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Timeouts command gets timeout durations associated with the current session."
                        }
                    ]
                }
            },
            "setTimeouts": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-set-timeouts"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Set Timeouts command sets timeout durations associated with the current session. The timeouts that can be controlled are listed in the table of session timeouts below."
                        }
                    ]
                }
            },
            "getUrl": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-current-url"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Current URL command returns the URL of the current top-level browsing context."
                        }
                    ]
                }
            },
            "navigateTo": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-navigate-to"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe navigateTo (go) command is used to cause the user agent to navigate the current top-level browsing context a new location."
                        }
                    ]
                }
            },
            "back": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-back"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Back command causes the browser to traverse one step backward in the joint session history of the current top-level browsing context. This is equivalent to pressing the back button in the browser chrome or calling "
                        },
                        {
                            "kind": "code",
                            "text": "`window.history.back`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "forward": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-forward"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Forward command causes the browser to traverse one step forwards in the joint session history of the current top-level browsing context."
                        }
                    ]
                }
            },
            "refresh": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-refresh"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Refresh command causes the browser to reload the page in current top-level browsing context."
                        }
                    ]
                }
            },
            "getTitle": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-title"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Title command returns the document title of the current top-level browsing context, equivalent to calling "
                        },
                        {
                            "kind": "code",
                            "text": "`document.title`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getWindowHandle": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-window-handle"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Window Handle command returns the window handle for the current top-level browsing context. It can be used as an argument to Switch To Window."
                        }
                    ]
                }
            },
            "closeWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-close-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Close Window command closes the current top-level browsing context. Once done, if there are no more top-level browsing contexts open, the WebDriver session itself is closed."
                        }
                    ]
                }
            },
            "switchToWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-switch-to-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Switch To Window command is used to select the current top-level browsing context for the current session, i.e. the one that will be used for processing commands."
                        }
                    ]
                }
            },
            "createWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#new-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nCreate a new top-level browsing context."
                        }
                    ]
                }
            },
            "getWindowHandles": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-window-handles"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Window Handles command returns a list of window handles for every open top-level browsing context. The order in which the window handles are returned is arbitrary."
                        }
                    ]
                }
            },
            "printPage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#print-page"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Print Page command renders the document to a paginated PDF document. __Note:__ Chrome currently only supports this in [headless mode](https://webdriver.io/docs/capabilities/#run-browser-headless), see ["
                        },
                        {
                            "kind": "code",
                            "text": "`crbug753118`"
                        },
                        {
                            "kind": "text",
                            "text": "](https://bugs.chromium.org/p/chromium/issues/detail?id=753118))."
                        }
                    ]
                }
            },
            "switchToFrame": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-switch-to-frame"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Switch To Frame command is used to select the current top-level browsing context or a child browsing context of the current browsing context to use as the current browsing context for subsequent commands."
                        }
                    ]
                }
            },
            "switchToParentFrame": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-switch-to-parent-frame"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Switch to Parent Frame command sets the current browsing context for future commands to the parent of the current browsing context."
                        }
                    ]
                }
            },
            "getWindowRect": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-window-rect"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Window Rect command returns the size and position on the screen of the operating system window corresponding to the current top-level browsing context."
                        }
                    ]
                }
            },
            "setWindowRect": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-set-window-rect"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Set Window Rect command alters the size and the position of the operating system window corresponding to the current top-level browsing context."
                        }
                    ]
                }
            },
            "maximizeWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-maximize-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Maximize Window command invokes the window manager-specific \"maximize\" operation, if any, on the window containing the current top-level browsing context. This typically increases the window to the maximum available size without going full-screen."
                        }
                    ]
                }
            },
            "minimizeWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-minimize-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Minimize Window command invokes the window manager-specific \"minimize\" operation, if any, on the window containing the current top-level browsing context. This typically hides the window in the system tray."
                        }
                    ]
                }
            },
            "fullscreenWindow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-fullscreen-window"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Fullscreen Window command invokes the window manager-specific “full screen” operation, if any, on the window containing the current top-level browsing context. This typically increases the window to the size of the physical display and can hide browser chrome elements such as toolbars."
                        }
                    ]
                }
            },
            "findElement": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-find-element"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Element command is used to find an element in the current browsing context that can be used for future commands. This command returns JSON representation of the element that can be passed to $ command to transform the reference to an extended WebdriverIO element."
                        }
                    ]
                }
            },
            "findElementFromShadowRoot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#find-element-from-shadow-root"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Element From Shadow Root command is used to find an element within the shadow root of an element that can be used for future commands. This command returns JSON representation of the element that can be passed to $ command to transform the reference to an extended WebdriverIO element."
                        }
                    ]
                }
            },
            "findElements": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-find-elements"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Elements command is used to find elements in the current browsing context that can be used for future commands. This command returns array of JSON representation of the elements that can be passed to $ command to transform the reference to an extended WebdriverIO element (See findElement)."
                        }
                    ]
                }
            },
            "findElementsFromShadowRoot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#find-elements-from-shadow-root"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Elements command is used to find elements within the shadow root of an element that can be used for future commands. This command returns array of JSON representation of the elements that can be passed to $ command to transform the reference to an extended WebdriverIO element (See findElement)."
                        }
                    ]
                }
            },
            "findElementFromElement": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-find-element-from-element"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Element From Element command is used to find an element from a web element in the current browsing context that can be used for future commands. This command returns JSON representation of the element that can be passed to $ command to transform the reference to an extended WebdriverIO element (See findElement)."
                        }
                    ]
                }
            },
            "findElementsFromElement": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-find-elements-from-element"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Find Elements From Element command is used to find elements from a web element in the current browsing context that can be used for future commands. This command returns array of JSON representation of the elements that can be passed to $ command to transform the reference to an extended WebdriverIO element (See findElement)."
                        }
                    ]
                }
            },
            "getElementShadowRoot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-active-element"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nGet the shadow root object of an element. The result object can be used to fetch elements within this shadow root using e.g. findElementFromShadowRoots or findElementsFromShadowRoots."
                        }
                    ]
                }
            },
            "getActiveElement": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-active-element"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nGet Active Element returns the active element of the current browsing context’s document element. This command returns JSON representation of the element that can be passed to $ command to transform the reference to an extended WebdriverIO element (See findElement)."
                        }
                    ]
                }
            },
            "isElementSelected": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-is-element-selected"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nIs Element Selected determines if the referenced element is selected or not. This operation only makes sense on input elements of the Checkbox- and Radio Button states, or option elements."
                        }
                    ]
                }
            },
            "isElementDisplayed": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#element-displayedness"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nIs Element Displayed determines the visibility of an element which is guided by what is perceptually visible to the human eye. In this context, an element's displayedness does not relate to the "
                        },
                        {
                            "kind": "code",
                            "text": "`visibility`"
                        },
                        {
                            "kind": "text",
                            "text": " or "
                        },
                        {
                            "kind": "code",
                            "text": "`display`"
                        },
                        {
                            "kind": "text",
                            "text": " style properties."
                        }
                    ]
                }
            },
            "getElementAttribute": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-attribute"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element Attribute command will return the attribute of a web element."
                        }
                    ]
                }
            },
            "getElementProperty": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-property"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element Property command will return the result of getting a property of an element."
                        }
                    ]
                }
            },
            "getElementCSSValue": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-css-value"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element CSS Value command retrieves the computed value of the given CSS property of the given web element."
                        }
                    ]
                }
            },
            "getElementText": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-text"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element Text command intends to return an element’s text \"as rendered\". An element's rendered text is also used for locating a elements by their link text and partial link text."
                        }
                    ]
                }
            },
            "getElementTagName": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-tag-name"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element Tag Name command returns the qualified element name of the given web element."
                        }
                    ]
                }
            },
            "getElementRect": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-element-rect"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Element Rect command returns the dimensions and coordinates of the given web element."
                        }
                    ]
                }
            },
            "isElementEnabled": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-is-element-enabled"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nIs Element Enabled determines if the referenced element is enabled or not. This operation only makes sense on form controls."
                        }
                    ]
                }
            },
            "elementClick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-element-click"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Element Click command scrolls into view the element if it is not already pointer-interactable, and clicks its in-view center point. If the element's center point is obscured by another element, an element click intercepted error is returned. If the element is outside the viewport, an element not interactable error is returned."
                        }
                    ]
                }
            },
            "elementClear": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-element-clear"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Element Clear command scrolls into view an editable or resettable element and then attempts to clear its selected files or text content."
                        }
                    ]
                }
            },
            "elementSendKeys": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-element-send-keys"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Element Send Keys command scrolls into view the form control element and then sends the provided keys to the element. In case the element is not keyboard-interactable, an element not interactable error is returned.<br /><br />The key input state used for input may be cleared mid-way through \"typing\" by sending the null key, which is U+E000 (NULL)."
                        }
                    ]
                }
            },
            "getPageSource": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-page-source"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Page Source command returns a string serialization of the DOM of the current browsing context active document."
                        }
                    ]
                }
            },
            "executeScript": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-execute-script"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Execute Script command executes a JavaScript function in the context of the current browsing context and returns the return value of the function."
                        }
                    ]
                }
            },
            "executeAsyncScript": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-execute-async-script"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Execute Async Script command causes JavaScript to execute as an anonymous function. Unlike the Execute Script command, the result of the function is ignored. Instead an additional argument is provided as the final argument to the function. This is a function that, when called, returns its first argument as the response."
                        }
                    ]
                }
            },
            "getAllCookies": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-all-cookies"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get All Cookies command returns all cookies associated with the address of the current browsing context’s active document."
                        }
                    ]
                }
            },
            "addCookie": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-adding-a-cookie"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Add Cookie command adds a single cookie to the cookie store associated with the active document's address."
                        }
                    ]
                }
            },
            "deleteAllCookies": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-delete-all-cookies"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Delete All Cookies command allows deletion of all cookies associated with the active document's address."
                        }
                    ]
                }
            },
            "getNamedCookie": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-named-cookie"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Named Cookie command returns the cookie with the requested name from the associated cookies in the cookie store of the current browsing context's active document. If no cookie is found, a no such cookie error is returned."
                        }
                    ]
                }
            },
            "deleteCookie": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-delete-cookie"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Delete Cookie command allows you to delete either a single cookie by parameter name, or all the cookies associated with the active document's address if name is undefined."
                        }
                    ]
                }
            },
            "performActions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-perform-actions"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Perform Actions command is used to execute complex user actions. See [spec](https://github.com/jlipps/simple-wd-spec#perform-actions) for more details."
                        }
                    ]
                }
            },
            "releaseActions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-release-actions"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Release Actions command is used to release all the keys and pointer buttons that are currently depressed. This causes events to be fired as if the state was released by an explicit series of actions. It also clears all the internal state of the virtual devices."
                        }
                    ]
                }
            },
            "dismissAlert": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-dismiss-alert"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Dismiss Alert command dismisses a simple dialog if present, otherwise error. A request to dismiss an alert user prompt, which may not necessarily have a dismiss button, has the same effect as accepting it."
                        }
                    ]
                }
            },
            "acceptAlert": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-accept-alert"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Accept Alert command accepts a simple dialog if present, otherwise error."
                        }
                    ]
                }
            },
            "getAlertText": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-get-alert-text"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Get Alert Text command returns the message of the current user prompt. If there is no current user prompt, it returns an error."
                        }
                    ]
                }
            },
            "sendAlertText": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-send-alert-text"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Send Alert Text command sets the text field of a window.prompt user prompt to the given value."
                        }
                    ]
                }
            },
            "takeScreenshot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-take-screenshot"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Take Screenshot command takes a screenshot of the top-level browsing context's viewport."
                        }
                    ]
                }
            },
            "takeElementScreenshot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#dfn-take-element-screenshot"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Take Element Screenshot command takes a screenshot of the visible region encompassed by the bounding rectangle of an element."
                        }
                    ]
                }
            },
            "getElementComputedRole": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#get-computed-role"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nGet the computed WAI-ARIA role of an element."
                        }
                    ]
                }
            },
            "getElementComputedLabel": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/webdriver/#get-computed-label"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nGet the accessible name of the element."
                        }
                    ]
                }
            },
            "setPermissions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/permissions/#set-permission-command"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// set midi permissions\nbrowser.setPermissions(\n  { name: 'midi', sysex: true },\n  'granted' // can be also \"denied\" or \"prompt\"\n);\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// set clipboard permissions\nbrowser.setPermissions({ name: 'clipboard-read' }, 'granted');\n// now you can read the clipboard via, e.g.\nconst clipboardText = await browser.execute(() => navigator.clipboard.readText());\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nSimulates user modification of a PermissionDescriptor's permission state. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "generateTestReport": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/reporting/#automation"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nGenerates a report for testing. Extension for [Reporting API](https://developers.google.com/web/updates/2018/09/reportingapi). __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "createMockSensor": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/sensors/#create-mock-sensor-command"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nCreates a mock sensor to emulate sensors like Ambient Light Sensor. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "getMockSensor": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/sensors/#get-mock-sensor-command"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nRetrieves information about a given type of mock sensor. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "updateMockSensor": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/sensors/#update-mock-sensor-reading-command"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nUpdates the mock sensor type. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "deleteMockSensor": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/sensors/#delete-mock-sensor-command"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Delete Session command closes any top-level browsing contexts associated with the current session, terminates the connection, and finally closes the current session. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "setTimeZone": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://w3c.github.io/sensors/#create-mock-sensor-command"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nSimulates the changing of a time zone for the purposes of testing. __Note:__ this feature has not landed in all browsers yet."
                        }
                    ]
                }
            },
            "addVirtualAuthenticator": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-add-virtual-authenticator"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nCreates a software [Virtual Authenticator](https://www.w3.org/TR/webauthn-2/#virtual-authenticators)."
                        }
                    ]
                }
            },
            "removeVirtualAuthenticator": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-remove-virtual-authenticator"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nRemoves a previously created Virtual Authenticator."
                        }
                    ]
                }
            },
            "addCredential": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-add-credential"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nInjects a Public Key Credential Source into an existing Virtual Authenticator."
                        }
                    ]
                }
            },
            "getCredentials": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-get-credentials"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nReturns one Credential Parameters object for every Public Key Credential Source stored in a Virtual Authenticator, regardless of whether they were stored using Add Credential or "
                        },
                        {
                            "kind": "code",
                            "text": "`navigator.credentials.create()`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "removeAllCredentials": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-remove-all-credentials"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nRemoves all Public Key Credential Sources stored on a Virtual Authenticator."
                        }
                    ]
                }
            },
            "removeCredential": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-remove-credential"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nRemoves a Public Key Credential Source stored on a Virtual Authenticator."
                        }
                    ]
                }
            },
            "setUserVerified": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.w3.org/TR/webauthn-2/#sctn-automation-set-user-verified"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Webdriver Protocol Command\n\nThe Set User Verified extension command sets the isUserVerified property on the Virtual Authenticator."
                        }
                    ]
                }
            },
            "getSessions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessions"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nReturns a list of the currently active sessions. Each session will be returned as a list of JSON objects containing "
                        },
                        {
                            "kind": "code",
                            "text": "`id`"
                        },
                        {
                            "kind": "text",
                            "text": " and "
                        },
                        {
                            "kind": "code",
                            "text": "`capabilities`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getSession": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionid"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nRetrieve the capabilities of the specified session."
                        }
                    ]
                }
            },
            "setAsyncTimeout": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtimeoutsasync_script"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"setTimeouts\" command instead!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSet the amount of time, in milliseconds, that asynchronous scripts executed by "
                        },
                        {
                            "kind": "code",
                            "text": "`/session/:sessionId/execute_async`"
                        },
                        {
                            "kind": "text",
                            "text": " are permitted to run before they are aborted and a "
                        },
                        {
                            "kind": "code",
                            "text": "`Timeout`"
                        },
                        {
                            "kind": "text",
                            "text": " error is returned to the client."
                        }
                    ]
                }
            },
            "setImplicitTimeout": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtimeoutsimplicit_wait"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"setTimeouts\" command instead!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSet the amount of time the driver should wait when searching for elements. When searching for a single element, the driver should poll the page until an element is found or the timeout expires, whichever occurs first. When searching for multiple elements, the driver should poll the page until at least one element is found or the timeout expires, at which point it should return an empty list. If this command is never sent, the driver should default to an implicit wait of 0ms."
                        }
                    ]
                }
            },
            "getWindowPosition": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidwindowwindowhandleposition"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the position of the current focussed window."
                        }
                    ]
                }
            },
            "setWindowPosition": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidwindowwindowhandleposition"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nChange the position of the current focussed window."
                        }
                    ]
                }
            },
            "_getWindowSize": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidwindowwindowhandlesize"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the size of the current focused window."
                        }
                    ]
                }
            },
            "_setWindowSize": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidwindowwindowhandlesize"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nChange the size of the current focused window."
                        }
                    ]
                }
            },
            "getElementLocation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidelementidlocation"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nDetermine an element's location on the page. The point "
                        },
                        {
                            "kind": "code",
                            "text": "`(0, 0)`"
                        },
                        {
                            "kind": "text",
                            "text": " refers to the upper-left corner of the page. The element's coordinates are returned as a JSON object with "
                        },
                        {
                            "kind": "code",
                            "text": "`x`"
                        },
                        {
                            "kind": "text",
                            "text": " and "
                        },
                        {
                            "kind": "code",
                            "text": "`y`"
                        },
                        {
                            "kind": "text",
                            "text": " properties."
                        }
                    ]
                }
            },
            "getElementLocationInView": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidelementidlocation_in_view"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nDetermine an element's location on the screen once it has been scrolled into view.<br /><br />__Note:__ This is considered an internal command and should only be used to determine an element's location for correctly generating native events."
                        }
                    ]
                }
            },
            "getElementSize": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidelementidsize"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"getElementRect\" command instead of \"getElementSize\"!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nDetermine an element's size in pixels. The size will be returned as a JSON object with "
                        },
                        {
                            "kind": "code",
                            "text": "`width`"
                        },
                        {
                            "kind": "text",
                            "text": " and "
                        },
                        {
                            "kind": "code",
                            "text": "`height`"
                        },
                        {
                            "kind": "text",
                            "text": " properties."
                        }
                    ]
                }
            },
            "elementEquals": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidelementidequalsother"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nCompare elements with each other."
                        }
                    ]
                }
            },
            "elementSubmit": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidelementidsubmit"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "sendKeys": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidkeys"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getAvailableEngines": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidimeavailable_engines"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getActiveEngine": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidimeactive_engine"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "isIMEActivated": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidimeactivated"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "deactivateIME": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidimedeactivate"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "activateIME": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidimeactivate"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getOrientation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidorientation"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "setOrientation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidorientation"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "moveToElement": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidmoveto"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a \"move to\" gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "buttonDown": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidbuttondown"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a click gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nClick and hold the left mouse button (at the coordinates set by the last moveto command). Note that the next mouse-related command that should follow is buttonup . Any other mouse command (such as click or another call to buttondown) will yield undefined behaviour."
                        }
                    ]
                }
            },
            "buttonUp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidbuttonup"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a click gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nReleases the mouse button previously held (where the mouse is currently at). Must be called once for every buttondown command issued. See the note in click and buttondown about implications of out-of-order commands."
                        }
                    ]
                }
            },
            "positionClick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidclick"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead of \"positionClick\"!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nClicks at the current mouse coordinates (set by moveto)."
                        }
                    ]
                }
            },
            "positionDoubleClick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessioniddoubleclick"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a click gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nDouble-clicks at the current mouse coordinates (set by moveto)."
                        }
                    ]
                }
            },
            "touchClick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtouchclick"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a touch gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSingle tap on the touch enabled device."
                        }
                    ]
                }
            },
            "touchScroll": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtouchscroll"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a touch gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nFinger move on the screen."
                        }
                    ]
                }
            },
            "touchDoubleClick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtouchdoubleclick"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a touch gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nDouble tap on the touch screen using finger motion events."
                        }
                    ]
                }
            },
            "touchFlick": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidtouchflick"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"action\" command instead to execute a touch gesture!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nFlick on the touch screen using finger motion events. This flickcommand starts at a particulat screen location."
                        }
                    ]
                }
            },
            "getGeoLocation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidlocation"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the current geo location."
                        }
                    ]
                }
            },
            "setGeoLocation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidlocation"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSet the current geo location."
                        }
                    ]
                }
            },
            "getLocalStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidlocal_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet all keys of the storage."
                        }
                    ]
                }
            },
            "setLocalStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidlocal_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSet the storage item for the given key."
                        }
                    ]
                }
            },
            "clearLocalStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidlocal_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nClear the storage."
                        }
                    ]
                }
            },
            "getLocalStorageItem": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidlocal_storagekeykey"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the storage item for the given key."
                        }
                    ]
                }
            },
            "deleteLocalStorageItem": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#delete-sessionsessionidlocal_storagekeykey"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getLocalStorageSize": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidlocal_storagesize"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the number of items in the storage."
                        }
                    ]
                }
            },
            "getSessionStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidsession_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet all keys of the storage."
                        }
                    ]
                }
            },
            "setSessionStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#post-sessionsessionidsession_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nSet the storage item for the given key."
                        }
                    ]
                }
            },
            "clearSessionStorage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#delete-sessionsessionidsession_storage"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nClear the storage."
                        }
                    ]
                }
            },
            "getSessionStorageItem": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#get-sessionsessionidsession_storagekeykey"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the storage item for the given key."
                        }
                    ]
                }
            },
            "deleteSessionStorageItem": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#delete-sessionsessionidsession_storagekeykey"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nRemove the storage item for the given key."
                        }
                    ]
                }
            },
            "getSessionStorageSize": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidsession_storagesize"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"execute\" command instead to interact with the session storage interface!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the number of items in the storage."
                        }
                    ]
                }
            },
            "getLogs": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidlog"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"devtools\" instead to get logs!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the log for a given log type. Log buffer is reset after each request."
                        }
                    ]
                }
            },
            "getLogTypes": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidlogtypes"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser. Use the \"devtools\" instead to get logs!"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet available log types."
                        }
                    ]
                }
            },
            "getApplicationCacheStatus": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidapplication_cachestatus"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This command is deprecated and likely not supported by any browser."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Jsonwp Protocol Command\n\nGet the status of the html5 application cache."
                        }
                    ]
                }
            },
            "getContext": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "switchContext": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getContexts": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#webviews-and-other-contexts"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "shake": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/interactions/shake/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nPerform a shake action on the device."
                        }
                    ]
                }
            },
            "lock": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/interactions/lock/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nLock the device."
                        }
                    ]
                }
            },
            "unlock": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/interactions/unlock/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nUnlock the device."
                        }
                    ]
                }
            },
            "isLocked": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/interactions/is-locked/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nCheck whether the device is locked or not."
                        }
                    ]
                }
            },
            "startRecordingScreen": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/recording-screen/start-recording-screen/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nStart recording the screen."
                        }
                    ]
                }
            },
            "stopRecordingScreen": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/recording-screen/stop-recording-screen/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nStop recording screen"
                        }
                    ]
                }
            },
            "getPerformanceDataTypes": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/performance-data/performance-data-types/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nReturns the information types of the system state which is supported to read as like cpu, memory, network traffic, and battery."
                        }
                    ]
                }
            },
            "getPerformanceData": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/performance-data/get-performance-data/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nReturns the information of the system state which is supported to read as like cpu, memory, network traffic, and battery."
                        }
                    ]
                }
            },
            "pressKeyCode": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/keys/press-keycode/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nPress a particular key on the device."
                        }
                    ]
                }
            },
            "longPressKeyCode": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/keys/long-press-keycode/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nPress and hold a particular key code on the device."
                        }
                    ]
                }
            },
            "sendKeyEvent": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#appium-extension-endpoints"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSend a key code to the device."
                        }
                    ]
                }
            },
            "rotateDevice": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-rotation"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRotate the device in three dimensions."
                        }
                    ]
                }
            },
            "getCurrentActivity": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/activity/current-activity/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet the name of the current Android activity."
                        }
                    ]
                }
            },
            "getCurrentPackage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/activity/current-package/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet the name of the current Android package."
                        }
                    ]
                }
            },
            "installApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/install-app/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nInstall the given app onto the device."
                        }
                    ]
                }
            },
            "activateApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/activate-app/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nActivate the given app onto the device"
                        }
                    ]
                }
            },
            "removeApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/remove-app/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRemove an app from the device."
                        }
                    ]
                }
            },
            "terminateApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/terminate-app/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nTerminate the given app on the device"
                        }
                    ]
                }
            },
            "isAppInstalled": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/is-app-installed/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nCheck whether the specified app is installed on the device."
                        }
                    ]
                }
            },
            "queryAppState": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/app-state/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet the given app status on the device"
                        }
                    ]
                }
            },
            "hideKeyboard": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/keys/hide-keyboard/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nHide soft keyboard."
                        }
                    ]
                }
            },
            "isKeyboardShown": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/keys/is-keyboard-shown/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nWhether or not the soft keyboard is shown."
                        }
                    ]
                }
            },
            "pushFile": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/files/push-file/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nPlace a file onto the device in a particular place."
                        }
                    ]
                }
            },
            "pullFile": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/files/pull-file/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRetrieve a file from the device's file system."
                        }
                    ]
                }
            },
            "pullFolder": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/files/pull-folder/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRetrieve a folder from the device's file system."
                        }
                    ]
                }
            },
            "toggleAirplaneMode": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/toggle-airplane-mode/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nToggle airplane mode on device."
                        }
                    ]
                }
            },
            "toggleData": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/toggle-data/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSwitch the state of data service."
                        }
                    ]
                }
            },
            "toggleWiFi": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/toggle-wifi/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSwitch the state of the wifi service."
                        }
                    ]
                }
            },
            "toggleLocationServices": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/toggle-location-services/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSwitch the state of the location service."
                        }
                    ]
                }
            },
            "toggleNetworkSpeed": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/network-speed/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet network speed (Emulator only)"
                        }
                    ]
                }
            },
            "openNotifications": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/system/open-notifications/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nOpen Android notifications (Emulator only)."
                        }
                    ]
                }
            },
            "startActivity": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/activity/start-activity/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nStart an Android activity by providing package name and activity name."
                        }
                    ]
                }
            },
            "getSystemBars": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/system/system-bars/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRetrieve visibility and bounds information of the status and navigation bars."
                        }
                    ]
                }
            },
            "getDeviceTime": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/system/system-time/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet the time on the device."
                        }
                    ]
                }
            },
            "getDisplayDensity": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#appium-extension-endpoints"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet display density from device."
                        }
                    ]
                }
            },
            "touchId": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/simulator/touch-id/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSimulate a [touch id](https://support.apple.com/en-ca/ht201371) event (iOS Simulator only). To enable this feature, the "
                        },
                        {
                            "kind": "code",
                            "text": "`allowTouchIdEnroll`"
                        },
                        {
                            "kind": "text",
                            "text": " desired capability must be set to true and the Simulator must be [enrolled](https://support.apple.com/en-ca/ht201371). When you set allowTouchIdEnroll to true, it will set the Simulator to be enrolled by default. The enrollment state can be [toggled](https://appium.github.io/appium.io/docs/en/commands/device/simulator/toggle-touch-id-enrollment/index.html). This call will only work if Appium process or its parent application (e.g. Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list."
                        }
                    ]
                }
            },
            "toggleEnrollTouchId": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/simulator/toggle-touch-id-enrollment/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nToggle the simulator being [enrolled](https://support.apple.com/en-ca/ht201371) to accept touchId (iOS Simulator only). To enable this feature, the "
                        },
                        {
                            "kind": "code",
                            "text": "`allowTouchIdEnroll`"
                        },
                        {
                            "kind": "text",
                            "text": " desired capability must be set to true. When "
                        },
                        {
                            "kind": "code",
                            "text": "`allowTouchIdEnroll`"
                        },
                        {
                            "kind": "text",
                            "text": " is set to true the Simulator will be enrolled by default, and the 'Toggle Touch ID Enrollment' changes the enrollment state. This call will only work if the Appium process or its parent application (e.g., Terminal.app or Appium.app) has access to Mac OS accessibility in System Preferences > Security & Privacy > Privacy > Accessibility list."
                        }
                    ]
                }
            },
            "launchApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/launch-app/"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "For iOS, utilize "
                                },
                                {
                                    "kind": "code",
                                    "text": "`driver.execute('mobile: launchApp', { ... })`"
                                },
                                {
                                    "kind": "text",
                                    "text": ", and for Android, make use of "
                                },
                                {
                                    "kind": "code",
                                    "text": "`driver.execute('mobile: activateApp', { ... })`"
                                },
                                {
                                    "kind": "text",
                                    "text": "."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nLaunch an app on device."
                        }
                    ]
                }
            },
            "closeApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/close-app/"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Use "
                                },
                                {
                                    "kind": "code",
                                    "text": "`driver.execute('mobile: terminateApp', { ... })`"
                                },
                                {
                                    "kind": "text",
                                    "text": " instead"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nClose an app on device."
                        }
                    ]
                }
            },
            "background": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/background-app/"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Use "
                                },
                                {
                                    "kind": "code",
                                    "text": "`driver.execute('mobile: backgroundApp', { ... })`"
                                },
                                {
                                    "kind": "text",
                                    "text": " instead"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSend the currently running app for this session to the background."
                        }
                    ]
                }
            },
            "endCoverage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/end-test-coverage/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet test coverage data."
                        }
                    ]
                }
            },
            "getStrings": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/app/get-app-strings/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet app strings."
                        }
                    ]
                }
            },
            "setValueImmediate": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#appium-extension-endpoints"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "replaceValue": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#appium-extension-endpoints"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nReplace the value to element directly."
                        }
                    ]
                }
            },
            "getSettings": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/session/settings/get-settings/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nRetrieve the current settings on the device."
                        }
                    ]
                }
            },
            "updateSettings": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/session/settings/update-settings/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nUpdate the current setting on the device."
                        }
                    ]
                }
            },
            "receiveAsyncResponse": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#appium-extension-endpoints"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nCallback url for asynchronous execution of JavaScript."
                        }
                    ]
                }
            },
            "gsmCall": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/gsm-call/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nMake GSM call (Emulator only)."
                        }
                    ]
                }
            },
            "gsmSignal": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/gsm-signal/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet GSM signal strength (Emulator only)."
                        }
                    ]
                }
            },
            "powerCapacity": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/emulator/power_capacity/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet the battery percentage (Emulator only)."
                        }
                    ]
                }
            },
            "powerAC": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/emulator/power_ac/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet the state of the battery charger to connected or not (Emulator only)."
                        }
                    ]
                }
            },
            "gsmVoice": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/gsm-voice/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet GSM voice state (Emulator only)."
                        }
                    ]
                }
            },
            "sendSms": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/network/send-sms/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSimulate an SMS message (Emulator only)."
                        }
                    ]
                }
            },
            "fingerPrint": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/authentication/finger-print/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nAuthenticate users by using their finger print scans on supported emulators."
                        }
                    ]
                }
            },
            "setClipboard": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/clipboard/set-clipboard/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nSet the content of the system clipboard"
                        }
                    ]
                }
            },
            "getClipboard": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/device/clipboard/get-clipboard/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet the content of the system clipboard"
                        }
                    ]
                }
            },
            "touchPerform": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/interactions/touch/touch-perform/"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// do a horizontal swipe by percentage\nconst startPercentage = 10;\nconst endPercentage = 90;\nconst anchorPercentage = 50;\n\nconst { width, height } = driver.getWindowSize();\nconst anchor = height// anchorPercentage / 100;\nconst startPoint = width// startPercentage / 100;\nconst endPoint = width// endPercentage / 100;\ndriver.touchPerform([\n  {\n    action: 'press',\n    options: {\n      x: startPoint,\n      y: anchor,\n    },\n  },\n  {\n    action: 'wait',\n    options: {\n      ms: 100,\n    },\n  },\n  {\n    action: 'moveTo',\n    options: {\n      x: endPoint,\n      y: anchor,\n    },\n  },\n  {\n    action: 'release',\n    options: {},\n  },\n]);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nThis functionality is only available from within a native context. 'Touch Perform' works similarly to the other singular touch interactions, except that this allows you to chain together more than one touch action as one command. This is useful because Appium commands are sent over the network and there's latency between commands. This latency can make certain touch interactions impossible because some interactions need to be performed in one sequence. Vertical, for example, requires pressing down, moving to a different y coordinate, and then releasing. For it to work, there can't be a delay between the interactions."
                        }
                    ]
                }
            },
            "multiTouchPerform": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/commands/interactions/touch/multi-touch-perform/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nThis functionality is only available from within a native context. Perform a multi touch action sequence."
                        }
                    ]
                }
            },
            "executeDriverScript": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium/blob/master/docs/en/commands/session/execute-driver.md"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nThis command enables you to specify a WebdriverIO script as a string and transmit it to the Appium server for local execution on the server itself. This approach helps minimize potential latency associated with each command. ***To utilize this command with Appium 2.0, you must have the ["
                        },
                        {
                            "kind": "code",
                            "text": "`execute-driver-plugin`"
                        },
                        {
                            "kind": "text",
                            "text": "](https://github.com/appium/appium/tree/master/packages/execute-driver-plugin) plugin installed.***"
                        }
                    ]
                }
            },
            "getEvents": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium/blob/master/docs/en/commands/session/events/get-events.md"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nGet events stored in appium server."
                        }
                    ]
                }
            },
            "logEvent": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium/blob/master/docs/en/commands/session/events/log-event.md"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nStore a custom event."
                        }
                    ]
                }
            },
            "compareImages": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://appium.github.io/appium.io/docs/en/writing-running-appium/image-comparison/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Appium Protocol Command\n\nThis feature conducts image comparisons utilizing the capabilities of the OpenCV framework. Please note that for this functionality to work, both the OpenCV framework and the opencv4nodejs module must be installed on the machine where the Appium server is operational. ***Furthermore, you'll need to have the ["
                        },
                        {
                            "kind": "code",
                            "text": "`images-plugin`"
                        },
                        {
                            "kind": "text",
                            "text": "](https://github.com/appium/appium/tree/master/packages/images-plugin) plugin installed to use this feature with Appium 2.0.***"
                        }
                    ]
                }
            },
            "isAlertOpen": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/alert_commands.cc#L42-L49"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconsole.log(browser.isAlertOpen()); // outputs: false\nbrowser.execute('window.alert()');\nconsole.log(browser.isAlertOpen()); // outputs: true\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nWhether a simple dialog is currently open."
                        }
                    ]
                }
            },
            "isAutoReporting": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://codereview.chromium.org/101203012"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nWhether it should automatically raises errors on browser logs."
                        }
                    ]
                }
            },
            "setAutoReporting": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://codereview.chromium.org/101203012"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Enable auto reporting first thing after session was initiated with empty browser logs\nconsole.log(browser.setAutoReporting(true)); // outputs: null\n// Upon requesting an non-existing resource it will abort execution due to thrown unknown error\nbrowser.url('https://webdriver.io/img/404-does-not-exist.png');\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// During the session do some operations which populate the browser logs\nbrowser.url('https://webdriver.io/img/404-does-not-exist.png');\nbrowser.url('https://webdriver.io/403/no-access');\n// Enable auto reporting which throws an unknown error for first browser log (404 response)\nbrowser.setAutoReporting(true);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nToggle whether to return response with unknown error with first browser error (e.g. failed to load resource due to 403/404 response) for all subsequent commands (once enabled)."
                        }
                    ]
                }
            },
            "isLoading": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/session_commands.cc#L783-L802"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconsole.log(browser.isLoading()); // outputs: false\nbrowser.newWindow('https://webdriver.io');\nconsole.log(browser.isLoading()); // outputs: true\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nDetermines load status for active window handle."
                        }
                    ]
                }
            },
            "takeHeapSnapshot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/chrome/web_view.h#L198-L202"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nTakes a heap snapshot of the current execution context."
                        }
                    ]
                }
            },
            "getNetworkConnection": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconst browser = remote({\n    capabilities: {\n        browserName: 'chrome',\n        'goog:chromeOptions': {\n            // Network emulation requires device mode, which is only enabled when mobile emulation is on\n            mobileEmulation: { deviceName: 'iPad' },\n        },\n    }\n});\nconsole.log(browser.getNetworkConnection()); // outputs: 6 (Both Wi-Fi and data)\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nGet the connection type for network emulation. This command is only applicable when remote end replies with "
                        },
                        {
                            "kind": "code",
                            "text": "`networkConnectionEnabled`"
                        },
                        {
                            "kind": "text",
                            "text": " capability set to "
                        },
                        {
                            "kind": "code",
                            "text": "`true`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "setNetworkConnection": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconst browser = remote({\n    capabilities: {\n        browserName: 'chrome',\n        'goog:chromeOptions': {\n            // Network emulation requires device mode, which is only enabled when mobile emulation is on\n            mobileEmulation: { deviceName: 'iPad' },\n        },\n    }\n});\nconsole.log(browser.setNetworkConnection({ type: 1 })); // outputs: 1 (Airplane Mode)\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nChange connection type for network connection. This command is only applicable when remote end replies with "
                        },
                        {
                            "kind": "code",
                            "text": "`networkConnectionEnabled`"
                        },
                        {
                            "kind": "text",
                            "text": " capability set to "
                        },
                        {
                            "kind": "code",
                            "text": "`true`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "getNetworkConditions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/session_commands.cc#L839-L859"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nGet current network conditions used for emulation."
                        }
                    ]
                }
            },
            "setNetworkConditions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L1663-L1722"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Use different download (25kb/s) and upload (50kb/s) throughput values for throttling with a latency of 1000ms\nbrowser.setNetworkConditions({ latency: 1000, download_throughput: 25600, upload_throughput: 51200 });\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Force disconnected from network by setting 'offline' to true\nbrowser.setNetworkConditions({ latency: 0, throughput: 0, offline: true });\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// When preset name (e.g. 'DSL') is specified it does not respect values in object (e.g. 'offline')\nbrowser.setNetworkConditions({ latency: 0, throughput: 0, offline: true }, 'DSL');\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Best practice for specifying network throttling preset is to use an empty object\nbrowser.setNetworkConditions({}, 'Good 3G');\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nSet network conditions used for emulation by throttling connection."
                        }
                    ]
                }
            },
            "deleteNetworkConditions": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L1724-L1745"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nDisable any network throttling which might have been set. Equivalent of setting the "
                        },
                        {
                            "kind": "code",
                            "text": "`No throttling`"
                        },
                        {
                            "kind": "text",
                            "text": " preset."
                        }
                    ]
                }
            },
            "sendCommand": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L1290-L1304"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nSend a command to the DevTools debugger.<br />For a list of available commands and their parameters refer to the [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/)."
                        }
                    ]
                }
            },
            "sendCommandAndGetResult": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L1306-L1320"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nSend a command to the DevTools debugger and wait for the result.<br />For a list of available commands and their parameters refer to the [Chrome DevTools Protocol Viewer](https://chromedevtools.github.io/devtools-protocol/)."
                        }
                    ]
                }
            },
            "file": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/session_commands.cc#L1037-L1065"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nUpload a file to remote machine on which the browser is running."
                        }
                    ]
                }
            },
            "launchChromeApp": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/session_commands.cc#L521-L539"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nimport fs from 'fs'\nconst browser = remote({\n    capabilities: {\n        browserName: 'chrome',\n        'goog:chromeOptions': {\n            // Install upon starting browser in order to launch it\n            extensions: [\n              // Entry should be a base64-encoded packed Chrome app (.crx)\n              fs.readFileSync('/absolute/path/app.crx').toString('base64')\n            ]\n        }\n    }\n});\nbrowser.launchChromeApp('aohghmighlieiainnegkcijnfilokake')); // Google Docs (https://chrome.google.com/webstore/detail/docs/aohghmighlieiainnegkcijnfilokake)\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nLaunches a Chrome app by specified id."
                        }
                    ]
                }
            },
            "getElementValue": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/element_commands.cc#L431-L443"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nRetrieves the value of a given form control element."
                        }
                    ]
                }
            },
            "elementHover": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/element_commands.cc#L126-L146"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nEnable hover state for an element, which is reset upon next interaction."
                        }
                    ]
                }
            },
            "touchPinch": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L813-L827"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nTrigger a pinch zoom effect."
                        }
                    ]
                }
            },
            "freeze": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L625-L633"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nFreeze the current page. Extension for [Page Lifecycle API](https://developers.google.com/web/updates/2018/07/page-lifecycle-api)."
                        }
                    ]
                }
            },
            "resume": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/window_commands.cc#L635-L645"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nResume the current page. Extension for [Page Lifecycle API](https://developers.google.com/web/updates/2018/07/page-lifecycle-api)."
                        }
                    ]
                }
            },
            "getCastSinks": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://chromium.googlesource.com/chromium/src/+/refs/tags/73.0.3683.121/chrome/test/chromedriver/server/http_handler.cc#748"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nReturns the list of cast sinks (Cast devices) available to the Chrome media router."
                        }
                    ]
                }
            },
            "selectCastSink": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://chromium.googlesource.com/chromium/src/+/refs/tags/73.0.3683.121/chrome/test/chromedriver/server/http_handler.cc#737"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nSelects a cast sink (Cast device) as the recipient of media router intents (connect or play)."
                        }
                    ]
                }
            },
            "startCastTabMirroring": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://chromium.googlesource.com/chromium/src/+/refs/tags/73.0.3683.121/chrome/test/chromedriver/server/http_handler.cc#741"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nInitiates tab mirroring for the current browser tab on the specified device."
                        }
                    ]
                }
            },
            "getCastIssueMessage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://chromium.googlesource.com/chromium/src/+/refs/tags/73.0.3683.121/chrome/test/chromedriver/server/http_handler.cc#751"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nReturns error message if there is any issue in a Cast session."
                        }
                    ]
                }
            },
            "stopCasting": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://chromium.googlesource.com/chromium/src/+/refs/tags/73.0.3683.121/chrome/test/chromedriver/server/http_handler.cc#744"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nStops casting from media router to the specified device, if connected."
                        }
                    ]
                }
            },
            "shutdown": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/bayandin/chromedriver/blob/v2.45/session_commands.cc#L489-L498"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Chromium Protocol Command\n\nShutdown ChromeDriver process and consequently terminating all active sessions."
                        }
                    ]
                }
            },
            "getPageIndex": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/appium/appium-base-driver/blob/master/docs/mjsonwp/protocol-methods.md#mobile-json-wire-protocol-endpoints"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@deprecated",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "In Appium 2.0, this method is marked as deprecated and currently has no available alternatives."
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Mjsonwp Protocol Command\n\nNo description available, please see reference link."
                        }
                    ]
                }
            },
            "getPageLogs": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands#CustomSauceLabsWebDriverExtensionsforNetworkandLogCommands-ExtendedDebuggingTools"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Get Network Logs\nconsole.log(browser.getPageLogs('sauce:network'));\n//\n// outputs:\n// [{\n//   \"url\": \"https://app.saucelabs.com/dashboard\",\n//   \"statusCode\": 200,\n//   \"method\": \"GET\",\n//   \"requestHeaders\": {\n//     ...\n//   },\n//   \"responseHeaders\": {\n//     ...\n//   },\n//   \"timing\": {\n//     ...\n//   }\n// }, {,\n//   ...\n// }]\n//\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Get Performance Logs (needs capturePerformance capability see: https://wiki.saucelabs.com/display/DOCS/Measure+Page+Load+Performance+Using+Test+Automation#MeasurePageLoadPerformanceUsingTestAutomation-EnableYourScript)\nconsole.log(browser.getPageLogs('sauce:performance'));\n//\n// outputs:\n// {\n//   \"speedIndex\": 1472.023,\n//   \"timeToFirstInteractive\": 1243.214,\n//   \"firstMeaningfulPaint\": 892.643,\n//   ...\n// }\n//\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nGet webpage specific log information based on the last page load."
                        }
                    ]
                }
            },
            "sauceThrottleNetwork": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands#CustomSauceLabsWebDriverExtensionsforNetworkandLogCommands-ThrottleNetworkCapabilities"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// predefined network condition\nbrowser.sauceThrottleNetwork('offline')\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// custom network condition\nbrowser.sauceThrottleNetwork({\n  download: 1000,\n  upload: 500,\n  latency: 40'\n})\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nWith network conditioning you can test your site on a variety of network connections, including Edge, 3G, and even offline. You can throttle the data throughput, including the maximum download and upload throughput, and use latency manipulation to enforce a minimum delay in connection round-trip time (RTT)."
                        }
                    ]
                }
            },
            "throttleCPU": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands#CustomSauceLabsWebDriverExtensionsforNetworkandLogCommands-ThrottleCPUCapabilities"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// throttle CPU and make it run 4x slower\nbrowser.throttleCPU(4)\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// reset CPU throttling\nbrowser.throttleCPU(0)\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nYou can throttle the CPU in DevTools to understand how your page performs under that constraint."
                        }
                    ]
                }
            },
            "interceptRequest": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands#CustomSauceLabsWebDriverExtensionsforNetworkandLogCommands-InterceptNetworkRequests"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// redirect a request\nbrowser.interceptRequest({\n  url: 'https://saucelabs.com',\n  redirect: 'https://google.com'\n})\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Blacklist requests to 3rd party vendors\nbrowser.interceptRequest({\n  url: 'https://api.segment.io/v1/p',\n  error: 'Failed'\n})\n```"
                                },
                                {
                                    "kind": "text",
                                    "text": "*"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Modify requests to REST API (Mock REST API response)\nbrowser.interceptRequest({\n  url: 'http://sampleapp.appspot.com/api/todos',\n  response: {\n    headers: {\n      'x-custom-headers': 'foobar'\n    },\n    body: [{\n      title: 'My custom todo',\n      order: 1,\n      completed: false,\n      url: 'http://todo-backend-express.herokuapp.com/15727'\n    }]\n  }\n})\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nAllows modifying any request made by the browser. You can blacklist, modify, or redirect these as required for your tests."
                        }
                    ]
                }
            },
            "assertPerformance": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// test performance for a page\nbrowser.url('https://webdriver.io')\nconst hasRegression = browser.assertPerformance({\n  name: 'my performance test', // make sure that the name is also set in the sauce options in your capabilities\n  metrics: ['score', 'firstPaint']\n})\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nAssert against the performance baseline of your app."
                        }
                    ]
                }
            },
            "jankinessCheck": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// test performance for a page\nbrowser.url('https://webdriver.io')\nbrowser.jankinessCheck()\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nPerform a scroll test that evaluates the jankiness of the application."
                        }
                    ]
                }
            },
            "mockRequest": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nMocks a network resource."
                        }
                    ]
                }
            },
            "getMockCalls": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nReceive request information about requests that match the mocked resource."
                        }
                    ]
                }
            },
            "clearMockCalls": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nClear list of mock calls."
                        }
                    ]
                }
            },
            "respondMock": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Saucelabs Protocol Command\n\nRespond if mock matches a specific resource."
                        }
                    ]
                }
            },
            "getDownloadableFiles": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.seleniumhq.org/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nList files from remote machine available for download."
                        }
                    ]
                }
            },
            "download": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.seleniumhq.org/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nDownload a file from remote machine on which the browser is running."
                        }
                    ]
                }
            },
            "deleteDownloadableFiles": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.seleniumhq.org/"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nRemove all downloadable files from remote machine on which the browser is running."
                        }
                    ]
                }
            },
            "getHubConfig": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/nicegraham/selenium-grid2-api#gridapihub"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nReceive hub config remotely."
                        }
                    ]
                }
            },
            "gridTestSession": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/nicegraham/selenium-grid2-api#gridapitestsession"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nGet the details of the Selenium Grid node running a session."
                        }
                    ]
                }
            },
            "gridProxyDetails": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/nicegraham/selenium-grid2-api#gridapiproxy"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nGet proxy details."
                        }
                    ]
                }
            },
            "manageSeleniumHubLifecycle": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/nicegraham/selenium-grid2-api#lifecycle-manager"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nManage lifecycle of hub node."
                        }
                    ]
                }
            },
            "queryGrid": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://www.selenium.dev/documentation/grid/advanced_features/graphql_support/"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconst result = await browser.queryGrid('{ nodesInfo { nodes { status, uri } } }');\nconsole.log(JSON.stringify(result, null, 4))\n//\n// outputs:\n// {\n//   \"data\": {\n//     \"nodesInfo\": {\n//       \"nodes\": [{\n//         \"status\": \"UP\",\n//         \"uri\": \"http://192.168.0.39:4444\"\n//       }]\n//     }\n//   }\n// }\n//\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Selenium Protocol Command\n\nSend GraphQL queries to the Selenium (hub or node) server to fetch data. (Only supported with Selenium v4 Server)"
                        }
                    ]
                }
            },
            "fullPageScreenshot": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://phabricator.services.mozilla.com/source/mozilla-central/browse/default/testing/geckodriver/src/command.rs$43-46"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gecko Protocol Command\n\nCaptures a screenshot of the entire page."
                        }
                    ]
                }
            },
            "getMozContext": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/blob/586affe0cf675b1d5c8abc756defa4a46d95391b/javascript/node/selenium-webdriver/firefox.js#L615-L622"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconsole.log(await browser.getMozContext()); // outputs: 'CHROME'\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gecko Protocol Command\n\nGet the context that is currently in effect, e.g. "
                        },
                        {
                            "kind": "code",
                            "text": "`CHROME`"
                        },
                        {
                            "kind": "text",
                            "text": " or "
                        },
                        {
                            "kind": "code",
                            "text": "`CONTENT`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "setMozContext": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/blob/586affe0cf675b1d5c8abc756defa4a46d95391b/javascript/node/selenium-webdriver/firefox.js#L615-L645"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\nconsole.log(await browser.getMozContext()); // outputs: 'CHROME'\nbrowser.setMozContext('CONTENT');\nconsole.log(await browser.getMozContext()); // outputs: 'CONTENT'\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gecko Protocol Command\n\nChanges target context for commands between chrome- and content.<br /><br />Changing the current context has a stateful impact on all subsequent commands. The "
                        },
                        {
                            "kind": "code",
                            "text": "`CONTENT`"
                        },
                        {
                            "kind": "text",
                            "text": " context has normal web platform document permissions, as if you would evaluate arbitrary JavaScript. The "
                        },
                        {
                            "kind": "code",
                            "text": "`CHROME`"
                        },
                        {
                            "kind": "text",
                            "text": " context gets elevated permissions that lets you manipulate the browser chrome itself, with full access to the XUL toolkit."
                        }
                    ]
                }
            },
            "installAddOn": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/blob/586affe0cf675b1d5c8abc756defa4a46d95391b/javascript/node/selenium-webdriver/firefox.js#L647-L668"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Create a buffer of the add on .zip file\nconst extension = await fs.promises.readFile('/path/to/extension.zip')\n// Load extension in Firefox\nconst id = await browser.installAddOn(extension.toString('base64'), false);\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gecko Protocol Command\n\nInstalls a new addon with the current session. This function will return an ID that may later be used to uninstall the addon using "
                        },
                        {
                            "kind": "code",
                            "text": "`uninstallAddon`"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        }
                    ]
                }
            },
            "uninstallAddOn": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@ref",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "https://github.com/SeleniumHQ/selenium/blob/586affe0cf675b1d5c8abc756defa4a46d95391b/javascript/node/selenium-webdriver/firefox.js#L670-L687"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```js\n// Create a buffer of the add on .zip file\nconst extension = await fs.promises.readFile('/path/to/extension.zip')\n// Load extension in Firefox\nconst id = await browser.installAddOn(extension.toString('base64'), false);\n// ...\nawait browser.uninstallAddOn(id)\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Gecko Protocol Command\n\nUninstalls an addon from the current browser session's profile."
                        }
                    ]
                }
            },
            "__type": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@alias",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "browser.waitUntil"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@returns",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "true if condition is fulfilled"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@uses",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "utility/pause"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\nhttps://github.com/webdriverio/example-recipes/blob/0bfb2b8d212b627a2659b10f4449184b657e1d59/waitUntil/index.html#L3-L8\n```"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\nhttps://github.com/webdriverio/example-recipes/blob/0c9252b0a4f7e18a34cece74e5798c1fe464c120/waitUntil/waitUntilExample.js#L16-L24\n```"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "This wait command is your universal weapon if you want to wait on something. It expects a condition\nand waits until that condition is fulfilled with a truthy value to be returned.\n\nA common example is to wait until a certain element contains a certain text (see example)."
                        }
                    ]
                }
            }
        }
    }
}