{
    "AssertViewOpts": {
        "properties": {
            "tolerance": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Indicates maximum allowed CIEDE2000 difference between colors. Used only in non-strict mode.\nIncreasing global default is not recommended, prefer changing tolerance for particular suites or states instead.\nBy default it's 2.3 which should be enough for the most cases."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`2.3`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Maximum allowed difference between colors.\nOverrides config "
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#browsers browsers"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#tolerance tolerance"
                        },
                        {
                            "kind": "text",
                            "text": " value."
                        }
                    ]
                }
            },
            "antialiasingTolerance": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Read more about this option in "
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@link",
                                    "text": "https://github.com/gemini-testing/looks-same#comparing-images-with-ignoring-antialiasing looks-same"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`4`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Minimum difference in brightness (zero by default) between the darkest/lightest pixel (which is adjacent to the antialiasing pixel) and theirs adjacent pixels.\nOverrides config "
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#browsers browsers"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#antialiasingTolerance antialiasingTolerance"
                        },
                        {
                            "kind": "text",
                            "text": " value."
                        }
                    ]
                }
            },
            "compositeImage": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "In the resulting screenshot the area which fits the viewport bounds will be joined with the area which is outside of the viewport height."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`true`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Allows testing of regions which bottom bounds are outside of a viewport height.\nOverrides config "
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#browsers browsers"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#compositeImage compositeImage"
                        },
                        {
                            "kind": "text",
                            "text": " value."
                        }
                    ]
                }
            },
            "screenshotDelay": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This is useful when the page has elements which are animated or if you do not want to screen a scrollbar."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`0`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Allows to specify a delay (in milliseconds) before making any screenshot.\nOverrides config "
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#browsers browsers"
                        },
                        {
                            "kind": "text",
                            "text": "."
                        },
                        {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "https://github.com/gemini-testing/testplane#screenshotDelay screenshotDelay"
                        },
                        {
                            "kind": "text",
                            "text": " value."
                        }
                    ]
                }
            },
            "selectorToScroll": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Useful when you capture the modal (popup). In this case a duplicate of the modal appears on the screenshot.\nThat happens because we scroll the page using "
                                },
                                {
                                    "kind": "code",
                                    "text": "`window`"
                                },
                                {
                                    "kind": "text",
                                    "text": " selector, which scroll only the background of the modal, and the modal itself remains in place.\nDefault value is "
                                },
                                {
                                    "kind": "code",
                                    "text": "`undefined`"
                                },
                                {
                                    "kind": "text",
                                    "text": " (it means scroll relative to "
                                },
                                {
                                    "kind": "code",
                                    "text": "`window`"
                                },
                                {
                                    "kind": "text",
                                    "text": "). Works only when "
                                },
                                {
                                    "kind": "code",
                                    "text": "`compositeImage`"
                                },
                                {
                                    "kind": "text",
                                    "text": " is "
                                },
                                {
                                    "kind": "code",
                                    "text": "`true`"
                                },
                                {
                                    "kind": "text",
                                    "text": " (default)."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`undefined`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Ability to set DOM-node selector which should be scroll when the captured element does not completely fit on the screen."
                        }
                    ]
                }
            },
            "disableAnimation": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Usefull when you capture screenshot of a page, having animations and transitions.\nIframe animations are only disabled when using webdriver protocol."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`true`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Ability to disable animations and transitions while making a screenshot"
                        }
                    ]
                }
            },
            "ignoreDiffPixelCount": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\n5\n```"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@example",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "```ts\n'1.5%'\n```"
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "Useful when you encounter a few pixels difference that cannot be eliminated using the tolerance and antialiasingTolerance settings."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@note",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "This should be considered a last resort and only used in small number of cases where necessary."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`0`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Ability to ignore a small amount of different pixels to classify screenshots as being \"identical\""
                        }
                    ]
                }
            },
            "ignoreElements": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`[]`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "DOM-node selectors which will be ignored (painted with a black rectangle) when comparing images."
                        }
                    ]
                }
            },
            "captureElementFromTop": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "In the first case viewport will be scrolled to the top of the element."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`true`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Ability to set capture element from the top area or from current position."
                        }
                    ]
                }
            },
            "allowViewportOverflow": {
                "comment": {
                    "blockTags": [
                        {
                            "skipRendering": false,
                            "tag": "@remarks",
                            "content": [
                                {
                                    "kind": "text",
                                    "text": "By default Testplane throws an error if element is outside the viewport bounds.\nThis option disables check that element is outside of the viewport left, top, right or bottom bounds.\nAnd in this case if browser option "
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@link",
                                    "text": "https://github.com/gemini-testing/testplane#compositeimage compositeImage"
                                },
                                {
                                    "kind": "text",
                                    "text": " set to "
                                },
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                },
                                {
                                    "kind": "text",
                                    "text": ", then only visible part of the element will be captured.\nBut if "
                                },
                                {
                                    "kind": "inline-tag",
                                    "tag": "@link",
                                    "text": "https://github.com/gemini-testing/testplane#compositeimage compositeImage"
                                },
                                {
                                    "kind": "text",
                                    "text": " set to "
                                },
                                {
                                    "kind": "code",
                                    "text": "`true`"
                                },
                                {
                                    "kind": "text",
                                    "text": " (default), then in the resulting screenshot will appear the whole element with not visible parts outside of the bottom bounds of viewport."
                                }
                            ]
                        },
                        {
                            "skipRendering": false,
                            "tag": "@defaultValue",
                            "content": [
                                {
                                    "kind": "code",
                                    "text": "`false`"
                                }
                            ]
                        }
                    ],
                    "modifierTags": {},
                    "summary": [
                        {
                            "kind": "text",
                            "text": "Disables check that element is outside of the viewport left, top, right or bottom bounds."
                        }
                    ]
                }
            }
        },
        "methods": {}
    }
}